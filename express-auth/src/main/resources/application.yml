##########################################################
##
## 端口，app名字
##
##########################################################
server:
  port: ${PORT:40400}
  servlet:
    context-path: /
spring:
  application:
    name: express-auth
   # 关闭模板引擎缓存
  thymeleaf:
    cache: false
  ##########################################################
  ##
  ## mysql 数据源配置
  ##
  ##########################################################
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.129.133:3306/express_user?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
    username: root
    password: 123456
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connection-timeout: 30000
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 60000
      pool-name: DatebookHikariCP
      max-lifetime: 28740000
      #连接在连接池的最小生存时间（毫秒）
      connection-test-query: SELECT 1
  ##########################################################
  ##
  ## redis 数据源配置
  ##
  ##########################################################
  redis:
    host: 192.168.129.133
    database: 0
    port: 6379
    password: 123456
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）
  ##########################################################
  ##
  ## nacos，sentinel配置
  ##
  ##########################################################
  cloud:
    nacos:
      discovery:
        # 指定nacos server的地址
        server-addr: localhost:8848
        cluster-name: EXPRESS
    # 配置sentinel
    sentinel:
      filter:
        # 打开/关闭掉对Spring MVC端点的保护
        enabled: true
      transport:
        # 指定sentinel 控制台的地址
        dashboard: localhost:8080
  main:
    allow-bean-definition-overriding: true
resttemplate:
  sentinel:
    # 设置成false，表示关闭@SentinelRestTemplate注解
    enabled: true
# 开启饥饿加载
ribbon:
  eager-load:
    enabled: true

##########################################################
##
## actuate 配置
##
##########################################################
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
##########################################################
##
## mybatis-plus 配置
##
##########################################################
mybatis-plus:
  mapper-locations: classpath*:mapping/*.xml
  global-config:
#    db-config:
#      # 逻辑删除
#      logic-delete-value: 1
#      logic-not-delete-value: 0
    # 是否显示mybatis-plus图标
    banner: false
  typeEnumsPackage: com.cwj.express.common.enums
  # SQL 执行log，调试时可打开
  configuration:
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

##########################################################
##
## 密钥 配置
##
##########################################################
encrypt:
  key-store:
    # 私钥路径
    location: classpath:/express.keystore
    # 生成私钥时的密码
    secret: expresskeystore
    # 生成私钥时的alias
    alias: expresskey
    # 生成私钥时的keypass
    password: express
auth:
  #token存储到redis的过期时间(暂时没用到)
  token-validity-seconds: 43000
  #下面两个参数相当于postman中的basic auth，两个参数都是和数据库对应的，clientSecret在数据库中是base64编码后的
  #可见com.xuecheng.auth.service.AuthService.getHttpBasic认证时也是编码后的，这个账号密码也是要保密的
  client-id: ExpressApp
  client-secret: ExpressApp
  cookie-domain: localhost
  #浏览器关闭则失效
  cookie-maxAge: -1
##########################################################
##
## 日志 配置
##
##########################################################
logging.file: logs/${spring.application.name}.log
logging:
  file:
    max-size: 10MB
    max-history: 20
  level:
    org.springframework.web.client.RestTemplate: debug
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%t]){faint} %clr(%-40.40logger{39}) %replace(%caller{1}){'\t|Caller.{1}0|\r\n', ''} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39}[lineno:%line]: %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
##########################################################
##
## 第三方sdk 配置
##
##########################################################
third-api-config:
  # 腾讯云短信验证码配置
  sms:
    # 应用 SDK AppID
    app-id: 1400274431
    # 应用 App Key
    app-key: 3fddda3db61f49ae02bd9c7de3dc56aa
    # 短信正文ID
    template-id: 448386
    # 短信签名
    sign: chen学习
    # 短信发送分钟间隔
    interval-min: 1
    # 短信有效分钟
    valid-min: 5
  # 百度人脸识别
  baidu:
    # 应用 APPID
    app-id: 17565026
    # 应用API KEY
    app-key: PNqLm2TjvWQiGhYwrGN1G08X
    # 应用 Secret Key
    secret-key: WbsZhASOKx9TNvGbMC97YpHFFW1UBe0O
    # 连接超时ms，默认 2000
    conn-timeout: 2000
    # socket超时ms，默认60000
    socket-timeout: 60000
    # 最低被接受的人脸置信分数[1,100]，分数越高，要求越严格，也越准确。
    accept-score: 90
    # 人脸分组
    group-id: 1
  # 三方登陆配置
  third-login:
    qq:
      app-id: 101568611
      app-key: 2a3716583b2355aeab442f1949c9f6e1